
button_game.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000296  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000010  00800060  00800060  0000030a  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  0000030a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000000ab  00000000  00000000  0000032a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000052a  00000000  00000000  000003d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000011e  00000000  00000000  000008ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000404  00000000  00000000  00000a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000060  00000000  00000000  00000e24  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000131  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001c8  00000000  00000000  00000fb5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 37       	cpi	r26, 0x70	; 112
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 26 01 	call	0x24c	; 0x24c <main>
  74:	0c 94 49 01 	jmp	0x292	; 0x292 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <blinkAll>:
int processButton[2];



void blinkAll(int buttonType){
	if(buttonType == 0){
  7c:	89 2b       	or	r24, r25
  7e:	21 f5       	brne	.+72     	; 0xc8 <blinkAll+0x4c>
	    PORTB = 0b00000000;
  80:	18 ba       	out	0x18, r1	; 24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  82:	88 e8       	ldi	r24, 0x88	; 136
  84:	93 e1       	ldi	r25, 0x13	; 19
  86:	fc 01       	movw	r30, r24
  88:	31 97       	sbiw	r30, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <blinkAll+0xc>
		_delay_ms(20);
		PORTB = 0b11111111;
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	28 bb       	out	0x18, r18	; 24
  90:	fc 01       	movw	r30, r24
  92:	31 97       	sbiw	r30, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <blinkAll+0x16>
		_delay_ms(20);
		PORTB = 0b00000000;
  96:	18 ba       	out	0x18, r1	; 24
  98:	fc 01       	movw	r30, r24
  9a:	31 97       	sbiw	r30, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <blinkAll+0x1e>
		_delay_ms(20);
		PORTB = 0b11111111;
  9e:	28 bb       	out	0x18, r18	; 24
  a0:	fc 01       	movw	r30, r24
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <blinkAll+0x26>
		_delay_ms(20);
		PORTB = 0b00000000;
  a6:	18 ba       	out	0x18, r1	; 24
  a8:	fc 01       	movw	r30, r24
  aa:	31 97       	sbiw	r30, 0x01	; 1
  ac:	f1 f7       	brne	.-4      	; 0xaa <blinkAll+0x2e>
		_delay_ms(20);
		PORTB = 0b11111111;
  ae:	28 bb       	out	0x18, r18	; 24
  b0:	fc 01       	movw	r30, r24
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <blinkAll+0x36>
		_delay_ms(20);
		PORTB = 0b00000000;
  b6:	18 ba       	out	0x18, r1	; 24
  b8:	fc 01       	movw	r30, r24
  ba:	31 97       	sbiw	r30, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <blinkAll+0x3e>
		_delay_ms(20);
		PORTB = 0b11111111;
  be:	28 bb       	out	0x18, r18	; 24
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <blinkAll+0x44>
		_delay_ms(20);
		PORTB = 0b00000000;
  c4:	18 ba       	out	0x18, r1	; 24
  c6:	08 95       	ret
	}else{
	    PORTA = 0b00000000;
  c8:	1b ba       	out	0x1b, r1	; 27
  ca:	88 e8       	ldi	r24, 0x88	; 136
  cc:	93 e1       	ldi	r25, 0x13	; 19
  ce:	fc 01       	movw	r30, r24
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <blinkAll+0x54>
		_delay_ms(20);
		PORTA = 0b11111111;
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	2b bb       	out	0x1b, r18	; 27
  d8:	fc 01       	movw	r30, r24
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <blinkAll+0x5e>
		_delay_ms(20);
		PORTA = 0b00000000;
  de:	1b ba       	out	0x1b, r1	; 27
  e0:	fc 01       	movw	r30, r24
  e2:	31 97       	sbiw	r30, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <blinkAll+0x66>
		_delay_ms(20);
		PORTA = 0b11111111;
  e6:	2b bb       	out	0x1b, r18	; 27
  e8:	fc 01       	movw	r30, r24
  ea:	31 97       	sbiw	r30, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <blinkAll+0x6e>
		_delay_ms(20);
		PORTA = 0b00000000;
  ee:	1b ba       	out	0x1b, r1	; 27
  f0:	fc 01       	movw	r30, r24
  f2:	31 97       	sbiw	r30, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <blinkAll+0x76>
		_delay_ms(20);
		PORTA = 0b11111111;
  f6:	2b bb       	out	0x1b, r18	; 27
  f8:	fc 01       	movw	r30, r24
  fa:	31 97       	sbiw	r30, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <blinkAll+0x7e>
		_delay_ms(20);
		PORTA = 0b00000000;
  fe:	1b ba       	out	0x1b, r1	; 27
 100:	fc 01       	movw	r30, r24
 102:	31 97       	sbiw	r30, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <blinkAll+0x86>
		_delay_ms(20);
		PORTA = 0b11111111;	
 106:	2b bb       	out	0x1b, r18	; 27
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <blinkAll+0x8c>
		_delay_ms(20);
		PORTA = 0b00000000;	
 10c:	1b ba       	out	0x1b, r1	; 27
 10e:	08 95       	ret

00000110 <processButtonPressed>:
	}
	
}


void processButtonPressed(int buttonType){
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	ec 01       	movw	r28, r24
    if(processButton[buttonType] == 1){
 116:	9c 01       	movw	r18, r24
 118:	22 0f       	add	r18, r18
 11a:	33 1f       	adc	r19, r19
 11c:	f9 01       	movw	r30, r18
 11e:	e8 59       	subi	r30, 0x98	; 152
 120:	ff 4f       	sbci	r31, 0xFF	; 255
 122:	40 81       	ld	r20, Z
 124:	51 81       	ldd	r21, Z+1	; 0x01
 126:	41 30       	cpi	r20, 0x01	; 1
 128:	51 05       	cpc	r21, r1
 12a:	f1 f5       	brne	.+124    	; 0x1a8 <processButtonPressed+0x98>
		pressedButton[buttonType]++;
 12c:	f9 01       	movw	r30, r18
 12e:	ec 59       	subi	r30, 0x9C	; 156
 130:	ff 4f       	sbci	r31, 0xFF	; 255
 132:	80 81       	ld	r24, Z
 134:	91 81       	ldd	r25, Z+1	; 0x01
 136:	01 96       	adiw	r24, 0x01	; 1
 138:	91 83       	std	Z+1, r25	; 0x01
 13a:	80 83       	st	Z, r24
		if(pressedButton[buttonType] > 200){
 13c:	89 3c       	cpi	r24, 0xC9	; 201
 13e:	91 05       	cpc	r25, r1
 140:	9c f1       	brlt	.+102    	; 0x1a8 <processButtonPressed+0x98>
			if(ledLevel[buttonType] >= 8){
 142:	f9 01       	movw	r30, r18
 144:	e4 59       	subi	r30, 0x94	; 148
 146:	ff 4f       	sbci	r31, 0xFF	; 255
 148:	80 81       	ld	r24, Z
 14a:	91 81       	ldd	r25, Z+1	; 0x01
 14c:	88 30       	cpi	r24, 0x08	; 8
 14e:	91 05       	cpc	r25, r1
 150:	34 f0       	brlt	.+12     	; 0x15e <processButtonPressed+0x4e>
				ledLevel[buttonType] = 1;
 152:	51 83       	std	Z+1, r21	; 0x01
 154:	40 83       	st	Z, r20
				blinkAll(buttonType);
 156:	ce 01       	movw	r24, r28
 158:	0e 94 3e 00 	call	0x7c	; 0x7c <blinkAll>
 15c:	19 c0       	rjmp	.+50     	; 0x190 <processButtonPressed+0x80>
 15e:	9a 01       	movw	r18, r20
 160:	08 2e       	mov	r0, r24
 162:	02 c0       	rjmp	.+4      	; 0x168 <processButtonPressed+0x58>
 164:	22 0f       	add	r18, r18
 166:	33 1f       	adc	r19, r19
 168:	0a 94       	dec	r0
 16a:	e2 f7       	brpl	.-8      	; 0x164 <processButtonPressed+0x54>
 16c:	ac 01       	movw	r20, r24
 16e:	4f 5f       	subi	r20, 0xFF	; 255
 170:	5f 4f       	sbci	r21, 0xFF	; 255
			}else{
				if(buttonType == 0){		    
 172:	20 97       	sbiw	r28, 0x00	; 0
 174:	41 f4       	brne	.+16     	; 0x186 <processButtonPressed+0x76>
					PORTB |= 1 << ledLevel[buttonType];
 176:	88 b3       	in	r24, 0x18	; 24
 178:	82 2b       	or	r24, r18
 17a:	88 bb       	out	0x18, r24	; 24
					ledLevel[buttonType]++;	
 17c:	50 93 6d 00 	sts	0x006D, r21
 180:	40 93 6c 00 	sts	0x006C, r20
 184:	05 c0       	rjmp	.+10     	; 0x190 <processButtonPressed+0x80>
				}else{
					PORTA |= 1 << ledLevel[buttonType];
 186:	8b b3       	in	r24, 0x1b	; 27
 188:	82 2b       	or	r24, r18
 18a:	8b bb       	out	0x1b, r24	; 27
					ledLevel[buttonType]++;
 18c:	51 83       	std	Z+1, r21	; 0x01
 18e:	40 83       	st	Z, r20
				}
			}
			pressedButton[buttonType] = 0;
 190:	fe 01       	movw	r30, r28
 192:	ee 0f       	add	r30, r30
 194:	ff 1f       	adc	r31, r31
 196:	df 01       	movw	r26, r30
 198:	ac 59       	subi	r26, 0x9C	; 156
 19a:	bf 4f       	sbci	r27, 0xFF	; 255
 19c:	1d 92       	st	X+, r1
 19e:	1c 92       	st	X, r1
			processButton[buttonType] = 0;
 1a0:	e8 59       	subi	r30, 0x98	; 152
 1a2:	ff 4f       	sbci	r31, 0xFF	; 255
 1a4:	11 82       	std	Z+1, r1	; 0x01
 1a6:	10 82       	st	Z, r1
		}
	}

}
 1a8:	df 91       	pop	r29
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <processButtonReleased>:

void processButtonReleased(int buttonType){
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
	releaseButton[buttonType]++;
 1b2:	ec 01       	movw	r28, r24
 1b4:	cc 0f       	add	r28, r28
 1b6:	dd 1f       	adc	r29, r29
 1b8:	de 01       	movw	r26, r28
 1ba:	a0 5a       	subi	r26, 0xA0	; 160
 1bc:	bf 4f       	sbci	r27, 0xFF	; 255
 1be:	8d 91       	ld	r24, X+
 1c0:	9c 91       	ld	r25, X
 1c2:	11 97       	sbiw	r26, 0x01	; 1
 1c4:	01 96       	adiw	r24, 0x01	; 1
 1c6:	11 96       	adiw	r26, 0x01	; 1
 1c8:	9c 93       	st	X, r25
 1ca:	8e 93       	st	-X, r24
	if(releaseButton[buttonType] > 200){
 1cc:	89 3c       	cpi	r24, 0xC9	; 201
 1ce:	91 05       	cpc	r25, r1
 1d0:	6c f0       	brlt	.+26     	; 0x1ec <processButtonReleased+0x3e>
	   pressedButton[buttonType] = 0;
 1d2:	fe 01       	movw	r30, r28
 1d4:	ec 59       	subi	r30, 0x9C	; 156
 1d6:	ff 4f       	sbci	r31, 0xFF	; 255
 1d8:	11 82       	std	Z+1, r1	; 0x01
 1da:	10 82       	st	Z, r1
	   releaseButton[buttonType] = 0;
 1dc:	1d 92       	st	X+, r1
 1de:	1c 92       	st	X, r1
	   processButton[buttonType] = 1;
 1e0:	c8 59       	subi	r28, 0x98	; 152
 1e2:	df 4f       	sbci	r29, 0xFF	; 255
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	99 83       	std	Y+1, r25	; 0x01
 1ea:	88 83       	st	Y, r24
	}
}
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <resetAll>:

void resetAll(){

    PORTB = 0b00000000;  //initalize all pins to low
 1f2:	18 ba       	out	0x18, r1	; 24
	PORTA = 0b00000000;  //initalize all pins to low
 1f4:	1b ba       	out	0x1b, r1	; 27
	
	ledLevel[0] = 1;
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 6d 00 	sts	0x006D, r25
 1fe:	80 93 6c 00 	sts	0x006C, r24
	ledLevel[1] = 1;
 202:	90 93 6f 00 	sts	0x006F, r25
 206:	80 93 6e 00 	sts	0x006E, r24
	pressedButton[0] = 0;
 20a:	10 92 65 00 	sts	0x0065, r1
 20e:	10 92 64 00 	sts	0x0064, r1
	pressedButton[1] = 0;
 212:	10 92 67 00 	sts	0x0067, r1
 216:	10 92 66 00 	sts	0x0066, r1
	releaseButton[0] = 0;
 21a:	10 92 61 00 	sts	0x0061, r1
 21e:	10 92 60 00 	sts	0x0060, r1
	releaseButton[1] = 0;
 222:	10 92 63 00 	sts	0x0063, r1
 226:	10 92 62 00 	sts	0x0062, r1
	processButton[0] = 1;
 22a:	90 93 69 00 	sts	0x0069, r25
 22e:	80 93 68 00 	sts	0x0068, r24
	processButton[1] = 1;
 232:	90 93 6b 00 	sts	0x006B, r25
 236:	80 93 6a 00 	sts	0x006A, r24
	blinkAll(0);
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 3e 00 	call	0x7c	; 0x7c <blinkAll>
	blinkAll(1);
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 3e 00 	call	0x7c	; 0x7c <blinkAll>
}
 24a:	08 95       	ret

0000024c <main>:

int main(void){


    DDRB = 0b11111110;  //set direction register for portb
 24c:	8e ef       	ldi	r24, 0xFE	; 254
 24e:	87 bb       	out	0x17, r24	; 23
	DDRA = 0b11111110;  //set direction register for porta
 250:	8a bb       	out	0x1a, r24	; 26
	DDRD &= ~(1 << PINB0); // set pin1 input
 252:	88 98       	cbi	0x11, 0	; 17
	
	PORTB = 0b00000000;  //initalize all pins to low
 254:	18 ba       	out	0x18, r1	; 24
	PORTA = 0b00000000;  //initalize all pins to low
 256:	1b ba       	out	0x1b, r1	; 27
	
	resetAll();
 258:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <resetAll>

	while(1){
	
	    if(bit_is_set(PIND,0)){
 25c:	80 9b       	sbis	0x10, 0	; 16
 25e:	02 c0       	rjmp	.+4      	; 0x264 <main+0x18>
		   resetAll();
 260:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <resetAll>
		   //3Push Button to Restet
		}
		
		if(bit_is_set(PINB,0)){
 264:	b0 9b       	sbis	0x16, 0	; 22
 266:	05 c0       	rjmp	.+10     	; 0x272 <main+0x26>
		   processButtonPressed(0);
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 88 00 	call	0x110	; 0x110 <processButtonPressed>
 270:	04 c0       	rjmp	.+8      	; 0x27a <main+0x2e>
		   //1Push Button is Pressed
		
		}else{
		   processButtonReleased(0);
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	0e 94 d7 00 	call	0x1ae	; 0x1ae <processButtonReleased>
		   //1Push Button is Released
		   
		}
		
		if(bit_is_set(PINA,0)){
 27a:	c8 9b       	sbis	0x19, 0	; 25
 27c:	05 c0       	rjmp	.+10     	; 0x288 <main+0x3c>
		   processButtonPressed(1);
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	0e 94 88 00 	call	0x110	; 0x110 <processButtonPressed>
 286:	ea cf       	rjmp	.-44     	; 0x25c <main+0x10>
		   //2Push Button is Pressed
		
		}else{
		   processButtonReleased(1);
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <processButtonReleased>
 290:	e5 cf       	rjmp	.-54     	; 0x25c <main+0x10>

00000292 <_exit>:
 292:	f8 94       	cli

00000294 <__stop_program>:
 294:	ff cf       	rjmp	.-2      	; 0x294 <__stop_program>
